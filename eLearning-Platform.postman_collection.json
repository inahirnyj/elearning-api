{
	"info": {
		"_postman_id": "5e67a2a7-a965-4a5c-bb65-d4bbd8f556b3",
		"name": "eLearning-Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Authorization",
					"item": [
						{
							"name": "DataFileSignUps",
							"item": [
								{
									"name": "Sign-up [Data File]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "de5e6e8f-d4d6-450f-b0c3-7b12c4401a10",
												"exec": [
													"//pm.environment.set(\"user-pass\", pm.variables.replaceIn('{{$randomPassword}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d9798d20-82d9-4757-953f-098a9347e736",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"user-token\", jsonData.token);",
													"pm.environment.set(\"user-id\", jsonData.id);",
													"pm.environment.set(\"user-username\", jsonData.first_name);",
													"pm.environment.set(\"user-lastname\", jsonData.last_name);",
													"pm.environment.set(\"user-email\", jsonData.email);",
													"pm.environment.set(\"user-url\", jsonData.url);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "first_name",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "last_name",
													"value": "{{surname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "password_confirmation",
													"value": "{{confirm_password}}",
													"type": "text"
												},
												{
													"key": "terms",
													"value": "true",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/sign_up",
											"host": [
												"{{url}}"
											],
											"path": [
												"sign_up"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Company Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/company/get",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Style Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/auth/login"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "Cache-Control",
										"value": "max-age=0"
									}
								],
								"url": {
									"raw": "{{url}}/company/style/get",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"style",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign-up",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "49961a50-e4ab-4fb8-9735-5ae70461837e",
										"exec": [
											"pm.environment.set(\"user-pass\", pm.variables.replaceIn('{{$randomPassword}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1efffe19-b15e-419b-81d1-1f99e0678485",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"user-token\", jsonData.token);",
											"pm.environment.set(\"user-id\", jsonData.id);",
											"pm.environment.set(\"user-username\", jsonData.first_name);",
											"pm.environment.set(\"user-lastname\", jsonData.last_name);",
											"pm.environment.set(\"user-email\", jsonData.email);",
											"pm.environment.set(\"user-url\", jsonData.url);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "{{$randomUserName}}",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "{{$randomLastName}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{$randomEmail}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{user-pass}}",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "{{user-pass}}",
											"type": "text"
										},
										{
											"key": "terms",
											"value": "true",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/sign_up",
									"host": [
										"{{url}}"
									],
									"path": [
										"sign_up"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Main-page",
					"item": [
						{
							"name": "Profile Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/profile/info",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Notify Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/notify/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"notify",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Category Header List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/company/category/header/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"category",
										"header",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Course Progress",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/course/progress?page=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"course",
										"progress"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Course Invites",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/course/invites",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"course",
										"invites"
									]
								}
							},
							"response": []
						},
						{
							"name": "Events Schedule",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/event/schedule?date_start=2019-12-13&date_end=2020-10-13",
									"host": [
										"{{url}}"
									],
									"path": [
										"event",
										"schedule"
									],
									"query": [
										{
											"key": "date_start",
											"value": "2019-12-13"
										},
										{
											"key": "date_end",
											"value": "2020-10-13"
										}
									]
								},
								"description": "Events schedule for 6 months starting today."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "User-Account-Settings",
					"item": [
						{
							"name": "Profile Info Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/profile/info",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Industries List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=l9RWem7ZiN2WIkGqADCR"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/industries/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"industries",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Company Data Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/company/get",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Notify Count Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/notify/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"notify",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Category Header List Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/company/category/header/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"category",
										"header",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Style Get Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/auth/login"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "Cache-Control",
										"value": "max-age=0"
									}
								],
								"url": {
									"raw": "{{url}}/company/style/get",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"style",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Info Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "62e83558-012e-4f14-aeca-ba38ca423ecf",
										"exec": [
											"pm.environment.set(\"user-lastname\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"pm.environment.set(\"user-name\", pm.variables.replaceIn('{{$randomFirstName}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5dd072ad-c995-4eb6-82d4-e4a90bdf4e46",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Origin",
										"value": "https://erudition.space"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/profile"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=L0TsmGMIZ3OqgkNsADCc"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"options\":\t{\n\t\t\t\"avatar\":\"https://erudition.space/docs/c4/1/NSfemqqy.jpg\",\n\t\t\t\"first_name\":\"{{user-name}}\",\n\t\t\t\"last_name\":\"{{user-lastname}}\",\n\t\t\t\"biography\":\"biography\",\n\t\t\t\"headline\":\"Director of Corporate Education\"\n\t\t\t}\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{url}}/profile/info/update",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"info",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Info Copy Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/profile/info",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Password Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b9a992ee-0cf5-42fb-9aea-acc8cfeab8cc",
										"exec": [
											"pm.environment.set(\"user-updated-pass\", pm.variables.replaceIn('{{$randomPassword}}'));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Origin",
										"value": "https://erudition.space"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/account"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=2syKSsvjZFwp4KsqADJk"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "old_password",
											"value": "{{user-pass}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{user-updated-pass}}",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "{{user-updated-pass}}",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/profile/password/update",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"password",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Profile-page",
					"item": [
						{
							"name": "Profile Statistic",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/profile"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=2syKSsvjZFwp4KsqADJk"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/statistic/{{user-url}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"statistic",
										"{{user-url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Link",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/profile"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=2syKSsvjZFwp4KsqADJk"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/link/{{user-url}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"link",
										"{{user-url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Course List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/profile"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=2syKSsvjZFwp4KsqADJk"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/course/list/{{user-url}}?page=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"course",
										"list",
										"{{user-url}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Learning Uncompleted List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/profile"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=2syKSsvjZFwp4KsqADJk"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/learning/list?url={{user-url}}&complected=0&page=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"learning",
										"list"
									],
									"query": [
										{
											"key": "url",
											"value": "{{user-url}}"
										},
										{
											"key": "complected",
											"value": "0"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Learning Completed List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/account-settings/profile"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=2syKSsvjZFwp4KsqADJk"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/profile/learning/list?url={{user-url}}&complected=1&page=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"learning",
										"list"
									],
									"query": [
										{
											"key": "url",
											"value": "{{user-url}}"
										},
										{
											"key": "complected",
											"value": "1"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notify Count Copy Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/notify/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"notify",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Profile Info Copy Copy Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/profile/info",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Category Header List Copy Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5Mzk0NjU3LCJleHAiOjE1OTIwMjI2NTcsIm5iZiI6MTU4OTM5NDY1NywianRpIjoiMzlPbUhQbVRwbUN2TWhqQiJ9.UoIB7wBoDTMnoq8aEd0QMub_22kriIvgewF9QvabseE"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/company/category/header/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"category",
										"header",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Courses-page",
					"item": [
						{
							"name": "Company Course List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/courses"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=taR3-OXSTAbXz7mRADLh"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/company/course/list?id=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"course",
										"list"
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "en"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjI0OSwiaXNzIjoiaHR0cDovL2VydWRpdGlvbi5zcGFjZS9hcGkvbG9naW4iLCJpYXQiOjE1ODk0MzcxMzAsImV4cCI6MTU5MjA2NTEzMCwibmJmIjoxNTg5NDM3MTMwLCJqdGkiOiJWWDNJNWI1ZnR3MHdOUXBRIn0.0zY2QD2bmNhH4vGsuGlqKHYx11d4Un_MzlpnERDis78"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "https://erudition.space/courses"
									},
									{
										"key": "Cookie",
										"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=taR3-OXSTAbXz7mRADLh"
									},
									{
										"key": "TE",
										"value": "Trailers"
									}
								],
								"url": {
									"raw": "{{url}}/filter/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a2d51a08-ca8c-46a8-b0dc-fd45df9c55f7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bb5cd6b2-1679-482f-9c58-aa363e81e108",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Service-Administration",
			"item": [
				{
					"name": "admin-authorization",
					"item": [
						{
							"name": "Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcae976a-ed76-4d59-a21a-9130a45c79c7",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"admin-token\", jsonData.token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "admin@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "123456",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instructor",
			"item": [
				{
					"name": "Create Course",
					"item": [
						{
							"name": "Instructor-Authorization",
							"item": [
								{
									"name": "Lector Sign-up",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "af98865d-c4b7-4f19-88f4-3e0aa9921ca1",
												"exec": [
													"pm.environment.set(\"lector-pass\", pm.variables.replaceIn('{{$randomPassword}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "69732562-1b7a-40c0-b49e-ab363cc8c160",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"lector-token\", jsonData.token);",
													"pm.environment.set(\"lector-id\", jsonData.id);",
													"pm.environment.set(\"lector-username\", jsonData.first_name);",
													"pm.environment.set(\"lector-lastname\", jsonData.last_name);",
													"pm.environment.set(\"lector-email\", jsonData.email);",
													"pm.environment.set(\"lector-url\", jsonData.url);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "first_name",
													"value": "{{$randomUserName}}",
													"type": "text"
												},
												{
													"key": "last_name",
													"value": "{{$randomLastName}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{$randomEmail}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{user-pass}}",
													"type": "text"
												},
												{
													"key": "password_confirmation",
													"value": "{{user-pass}}",
													"type": "text"
												},
												{
													"key": "terms",
													"value": "true",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/sign_up",
											"host": [
												"{{url}}"
											],
											"path": [
												"sign_up"
											]
										}
									},
									"response": []
								},
								{
									"name": "Admin Assigns Lector Role to User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{admin-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Accept-Language",
												"value": "en"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL2xvZ2luIiwiaWF0IjoxNTg5NTYzMDM2LCJleHAiOjE1OTIxOTEwMzYsIm5iZiI6MTU4OTU2MzAzNiwianRpIjoiTk8wZEJZclpCZW1YUWcxUyJ9.EKRgakJeCg423KNtkJTTb2UD3qTUR3LQ96zwV7fkO7Y"
											},
											{
												"key": "Origin",
												"value": "https://erudition.space"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Referer",
												"value": "https://erudition.space/settings/members"
											},
											{
												"key": "Cookie",
												"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=a_yAQH1t-0am9Vu1ADx1"
											},
											{
												"key": "TE",
												"value": "Trailers"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\":\"{{lector-email}}\",\n\t\"role\":[\"lecturer\",\"worker\"]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{url}}/company/member/role/edit",
											"host": [
												"{{url}}"
											],
											"path": [
												"company",
												"member",
												"role",
												"edit"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Step-1",
							"item": [
								{
									"name": "Get categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a082254f-af09-4e34-8d49-7ea953a52593",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"categoriesIDs = [];",
													"",
													"jsonData.forEach(function (post) {",
													"    categoriesIDs.add(post.id);",
													"});",
													"",
													"pm.environment.set(\"categoriesIDs\", categoriesIDs);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"url": {
											"raw": "{{url}}/category/list",
											"host": [
												"{{url}}"
											],
											"path": [
												"category",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get company style configurartion",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed1d34ab-8e5c-4fbb-b6a5-0371a358baac",
												"exec": [
													"pm.test(\"Response Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"url": {
											"raw": "{{url}}/company/style/get",
											"host": [
												"{{url}}"
											],
											"path": [
												"company",
												"style",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get company URL",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"url": {
											"raw": "{{url}}/company/get?url=demo-company",
											"host": [
												"{{url}}"
											],
											"path": [
												"company",
												"get"
											],
											"query": [
												{
													"key": "url",
													"value": "demo-company"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Category create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab20e422-e517-40a5-82e7-8713afe9f491",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"// VARIABLES",
													"pm.environment.set(\"new-added-categoryId\", jsonData.id);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{lector-token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name_category",
													"value": " AngularJS",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/category/create",
											"host": [
												"{{url}}"
											],
											"path": [
												"category",
												"create"
											]
										},
										"description": "Creating new category (skill's tag) in scope of 1 step of new course creating."
									},
									"response": []
								},
								{
									"name": "Add Photo Cover",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fd660108-fd0f-4e1f-b4c2-6a63342862b7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "279e178f-840c-4dbf-bb82-78a52be0da4d",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"",
													"// VARIABLES",
													"pm.environment.set(\"course-photo-cover\", jsonData.image);",
													"",
													"//TESTS",
													"pm.test(\"Responce body should have LINK_THUMB property\", function () {",
													"    pm.expect(jsonData).to.have.property(\"image\").and.not.null;",
													"});",
													"pm.test(\"Responce body should have LINK_FILE property\", function () {",
													"    pm.expect(jsonData).to.have.property(\"thumb\").and.not.null;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"src": "/Users/inahirnyy/Documents/diprella/test-data/Linux-Kernel-Vul.jpg"
												},
												{
													"key": "thumb_image",
													"type": "file",
													"src": "/Users/inahirnyy/Documents/diprella/test-data/content-marketing.jpg"
												}
											]
										},
										"url": {
											"raw": "{{url}}/image/upload",
											"host": [
												"{{url}}"
											],
											"path": [
												"image",
												"upload"
											]
										},
										"description": "`name_category` : (string) Category name\n\n`industry_id` : (array) - [1,2,3]  Industry id  . Use (Get industry list)"
									},
									"response": []
								},
								{
									"name": "Add Video Trailer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9de1c58b-7f7a-4c9c-9709-d6c219f72e98",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"//VARIABLES",
													"pm.environment.set(\"course-trailer\", jsonData.link_file);",
													"pm.environment.set(\"course-trailer-thumb\", jsonData.link_thumb);",
													"",
													"//TESTS",
													"pm.test(\"Responce body should have LINK_THUMB property\", function () {",
													"    pm.expect(jsonData).to.have.property(\"link_thumb\").and.not.null;",
													"});",
													"",
													"pm.test(\"Responce body should have LINK_FILE property\", function () {",
													"    pm.expect(jsonData).to.have.property(\"link_file\").and.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "files/small.mp4"
												}
											]
										},
										"url": {
											"raw": "{{url}}/video/upload",
											"host": [
												"{{url}}"
											],
											"path": [
												"video",
												"upload"
											]
										},
										"description": "`name_category` : (string) Category name\n\n`industry_id` : (array) - [1,2,3]  Industry id  . Use (Get industry list)"
									},
									"response": []
								},
								{
									"name": "Create course",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "774f1cfe-e592-4dd5-a8ef-401a0231a600",
												"exec": [
													"var privacies = pm.environment.get(\"privacies\");",
													"",
													"if(!privacies) { ",
													"  privacies = [\"public\", \"private\", \"protected\"];",
													"  } else if(privacies.length == 0) {",
													"     privacies = [\"public\", \"private\", \"protected\"]; ",
													"  }",
													"  ",
													"var currentPrivacy = privacies.shift();",
													"",
													"pm.environment.set(\"privacy\", currentPrivacy);",
													"pm.environment.set(\"privacies\", privacies);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ab9352ef-5066-4b21-af50-9a8b84e9f394",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"//GET VARIABLES",
													"var privacies = pm.environment.get(\"privacies\");",
													"var privacy = pm.environment.get(\"privacy\");",
													"var ext_api = pm.environment.get(\"ext_api\");",
													"",
													"//DEFINE VARIABLES",
													"pm.environment.set(privacy+\"-course-id\", jsonData.id);",
													"",
													"//TESTS",
													"pm.test(\"Responce body should have property\", function () {",
													"    pm.expect(jsonData).to.have.property(\"id\").and.not.null;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Wnat are the benefits of using AngularJS?",
													"type": "text"
												},
												{
													"key": "level",
													"value": "begginer",
													"type": "text"
												},
												{
													"key": "categories_id[]",
													"value": "{{categoryId}}",
													"type": "text"
												},
												{
													"key": "privacy",
													"value": "{{privacy}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "Client-Server\nThe client-server constraint works on the concept that the client and the server should be separate from each other and allowed to evolve individually and independently. In other words, I should be able to make changes to my mobile application without impacting either the data structure or the database design on the server. At the same time, I should be able to modify the database or make changes to my server application without impacting the mobile client. This creates a separation of \nconcerns, letting each application grow and scale independently of the other and allowing your organization to grow quickly and efficiently.\n\nStateless\nREST APIs are stateless, meaning that calls can be made independently of one another, and each call contains all of the data necessary to complete itself successfully. A REST API should not rely on data being stored on the server or sessions to determine what to do with a call, but rather solely rely on the data that is provided in that call itself. Identifying information is not being stored on the server when making calls. Instead, each call has the necessary data in itself, such as the API key, access token, user ID, etc. This also helps increase the API’s reliability by having all of the data necessary to make the call, instead of relying on a series of calls with server state to create an object, which may result in partial fails. Instead, in order to reduce memory requirements and keep your application as scalable as possible, a RESTful API requires that any state is stored on the client—not on the server.\n\nCache\nBecause a stateless API can increase request overhead by handling large loads of incoming and outbound calls, a REST API should be designed to encourage the storage of cacheable data. This means that when data is cacheable, the response should indicate that the data can be stored up to a certain time (expires-at), or in cases where data needs to be real-time, that the response should not be cached by the client. By enabling this critical constraint, you will not only greatly reduce the number of interactions with your API, reducing internal server usage, but also provide your API users with the tools necessary to provide the fastest and most efficient apps possible. Keep in mind that caching is done on the client side. While you may be able to cache some data within your architecture to perform overall performance, the intent is to instruct the client on how it should proceed and whether or not the client can store the data temporarily.\n\nUniform Interface\nThe key to the decoupling client from server is having a uniform interface that allows independent evolution of the application without having the application’s services, models, or actions tightly coupled to the API layer itself. The uniform interface lets the client talk to the server in a single language, independent of the architectural backend of either. This interface should provide an unchanging, standardized means of communicating between the client and the server, such as using HTTP with URI resources, CRUD (Create, Read, Update, Delete), and JSON.\n\nLayered System\nAs the name implies, a layered system is a system comprised of layers, with each layer having a specific functionality and responsibility. If we think of a Model View Controller framework, each layer has its own responsibilities, with the models comprising how the data should be formed, the controller focusing on the incoming actions and the view focusing on the output. Each layer is separate but also interacts with the other. In REST API design, the same principle holds true, with different layers of the architecture working together to build a hierarchy that helps create a more scalable and modular application.\nA layered system also lets you encapsulate legacy systems and move less commonly accessed functionality to a shared intermediary while also shielding more modern and commonly used components from them. Additionally, the layered system gives you the freedom to move systems in and out of your architecture as technologies and services evolve, increasing flexibility and longevity as long as you keep the different modules as loosely coupled as possible. There are substantial security benefits of having a layered system since it allows you to stop attacks at the proxy layer, or within other layers, preventing them from getting to your actual server architecture. By utilizing a layered system with a proxy, or creating a single point of access, you are able to keep critical and more vulnerable aspects of your architecture behind a firewall, preventing direct interaction with them by the client. Keep in mind that security is not based on single “stop all” solution, but rather on having multiple layers with the understanding that certain security checks may fail or be bypassed. As such, the more security you are able to implement into your system, the more likely you are to prevent damaging Attacks.\n",
													"type": "text"
												},
												{
													"key": "lang",
													"value": "eng",
													"type": "text"
												},
												{
													"key": "owner_type",
													"value": "company",
													"type": "text"
												},
												{
													"key": "image",
													"value": "{{course-photo-cover}}",
													"type": "text"
												},
												{
													"key": "thumb_image",
													"value": "{{course-photo-cover}}",
													"type": "text"
												},
												{
													"key": "video_cover",
													"value": "{{course-trailer}}",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/course/create",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"create"
											]
										},
										"description": "`title` : (string) - Course title\n\n`image` : (string) - Link file .  Use api (Upload image with thumb)\n\n`level` : (string) - Level course ['beginner', 'intermediate', 'advanced', 'not-selected']\n\n`industry_id` : (array) - [1,2,3]  Industry id  . Use (Get industry list)"
									},
									"response": []
								},
								{
									"name": "Get Courses List",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b7f0bbb-0053-461d-95b5-f8025feac88f",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"courseIDs = [];",
													"",
													"jsonData.forEach(function(post) {",
													"    courseIDs.add(post.id);",
													"});",
													"",
													"//pm.environment.set(\"courseIDs\", courseIDs);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "24ba0dd5-f7e4-4d27-b1a1-b5deb3f08ce1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/company/course/list?id=1",
											"host": [
												"{{url}}"
											],
											"path": [
												"company",
												"course",
												"list"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Step-2",
							"item": [
								{
									"name": "Content",
									"item": [
										{
											"name": "Get module list",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29a75522-9608-44c7-b7cd-9b70872abc33",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"modulesIDs = [];",
															"",
															"jsonData.modules.forEach(function (post) {",
															"    modulesIDs.add(post.id);",
															"});",
															"",
															"pm.environment.set(\"modulesIDs\", modulesIDs);",
															"",
															"",
															"pm.environment.set(\"public-course-default-module-id\", jsonData.modules[0].id);",
															"pm.environment.set(\"public-course-default-module-order\", jsonData.modules[0].order_id);",
															"",
															"//TESTS",
															"//  pm.test(\"Check if Modules is an array and is not empty\", function () {",
															"//     pm.expect(jsonData.modules).to.be.an('array').and.not.empty;",
															"//  });",
															"",
															"",
															"pm.test(\"Expected ID=5 to be part of previously created array\", function () {",
															"    pm.expect(5).to.be.oneOf(pm.environment.get(\"modulesIDs\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														}
													]
												},
												"description": "`course_id`: (int) Course id"
											},
											"response": []
										},
										{
											"name": "Upload Article File",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da4ad2af-ab7d-4e63-87d6-c6c386c3bf5a",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"public-course-article-file-id\", jsonData[0].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"disabled": true
													},
													{
														"key": "Authorization",
														"value": "Bearer {{lector-token}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "files/application-performance-testing-basics-agileload.pdf"
														},
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/files/upload",
													"host": [
														"{{url}}"
													],
													"path": [
														"files",
														"upload"
													]
												},
												"description": "`course_id` :(int) Course id \n\n`module_id` : (int) Module id with course\n\n`title`   : (string)  Article title\n\n`article` : (string) Article\n\n`files` : (array) [1,2,3] File id . Use (Upload files api)\n\n`expected_time`: (int) Time in seconds"
											},
											"response": []
										},
										{
											"name": "Create Article",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc4540b9-6389-4674-82c8-320255d20461",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"",
															"pm.environment.set(\"public-course-article-article-title\", jsonData.title);",
															"pm.environment.set(\"public-course-article-article-id\", jsonData.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"disabled": true
													},
													{
														"key": "Authorization",
														"value": "Bearer {{lector-token}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module-id}}",
															"type": "text"
														},
														{
															"key": "title",
															"value": "My article title 2",
															"type": "text"
														},
														{
															"key": "expected_time",
															"value": "1200",
															"type": "text"
														},
														{
															"key": "article",
															"value": "public-course-module",
															"type": "text"
														},
														{
															"key": "files_id[]",
															"value": "{{public-course-article-file-id}}",
															"type": "text"
														},
														{
															"key": "type",
															"value": "article",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/article/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"article",
														"create"
													]
												},
												"description": "`course_id` :(int) Course id \n\n`module_id` : (int) Module id with course\n\n`title`   : (string)  Article title\n\n`article` : (string) Article\n\n`files` : (array) [1,2,3] File id . Use (Upload files api)\n\n`expected_time`: (int) Time in seconds"
											},
											"response": []
										},
										{
											"name": "Get module list [2]",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "728040e7-a5b4-4994-9dba-eebad8ebaf6d",
														"exec": [
															"var jsonData = pm.response.json();",
															"var articleTitle = pm.environment.get(\"public-course-article-article-title\");",
															"",
															"modulesLessonTitles = [];",
															"",
															"jsonData.modules.forEach(function (obj) {",
															"    obj.module_lessons.forEach(function (module) {",
															"        modulesLessonTitles.push(module.title);",
															"    });",
															"});",
															"",
															"",
															"pm.environment.set(\"modulesLessonTitles\",modulesLessonTitles);",
															"",
															"//TESTS",
															"//  pm.test(\"Check if Modules is an array and is not empty\", function () {",
															"//     pm.expect(jsonData.modules).to.be.an('array').and.not.empty;",
															"",
															"//  });",
															" ",
															" ",
															"pm.test(\"check if module contains Article previously created\", function () {",
															"    pm.expect(pm.environment.get(\"public-course-article-article-title\")).to.be.oneOf(pm.environment.get(\"modulesLessonTitles\"));",
															"});",
															"",
															"",
															"pm.environment.set(\"modules-count\", jsonData.modules.length);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{lector-token}}"
													}
												],
												"url": {
													"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														}
													]
												},
												"description": "`course_id`: (int) Course id"
											},
											"response": []
										},
										{
											"name": "Create module",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a359f9f6-424c-4fb5-9b36-fa74884c08e7",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.environment.set(\"public-course-newly-module-id\", jsonData.id);",
															"pm.environment.set(\"public-course-newly-module-name\", jsonData.name);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"disabled": true
													},
													{
														"key": "Authorization",
														"value": "Bearer {{lector-token}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "title",
															"value": "Awesome Module",
															"type": "text"
														}
													],
													"options": {
														"urlencoded": {}
													}
												},
												"url": {
													"raw": "{{url}}/course/module/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"create"
													]
												},
												"description": "`course_id` :(int) Course id\n\n`title`     :(string) Module title"
											},
											"response": []
										},
										{
											"name": "Get module list [3]",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fcc9a8b6-0a0e-4e46-85b7-276a68ae701a",
														"exec": [
															"//VARIABLES",
															"",
															"//TESTS",
															"pm.test(\"Check if Modules is an array and is not empty\", function () {",
															"    pm.expect(jsonData.modules).to.be.an('array').and.not.empty;",
															"});",
															"",
															"pm.test(\"Newly created Module id is not part of previously created modules list\", function () {",
															"    pm.expect(pm.environment.get(\"public-course-newly-module-id\")).not.to.be.oneOf(pm.environment.get(\"modulesIDs\"));",
															"});",
															"",
															"pm.test(\"Check that number of modules increased by new one created\", function () {",
															"    pm.expect(pm.environment.get(\"public-course-modules-count\")).to.eql(JSON.stringify(jsonData.modules.length - 1));",
															"});",
															"",
															"var jsonData = pm.response.json();",
															"pm.environment.set(\"last-added-module-id\", jsonData.modules[jsonData.modules.length - 1].id);",
															"",
															"",
															"moduleIDs = [];",
															"jsonData.modules.forEach(function (post) {",
															"    moduleIDs.add(+'' + post.id + '');",
															"});",
															"",
															"pm.environment.set(\"moduleIDs\", moduleIDs);",
															"",
															"var mymodule = pm.environment.get(\"public-course-newly-module-id\");",
															"pm.test(\"New module id is present in the list of all course modules\", function () {",
															"    pm.expect(mymodule).to.be.oneOf(pm.environment.get(\"moduleIDs\"));",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{lector-token}}"
													}
												],
												"url": {
													"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														}
													]
												},
												"description": "`course_id`: (int) Course id"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Module",
									"item": [
										{
											"name": "Delete module",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{url}}/course/module/delete?course_id={{public-course-id}}&module_id={{last-added-module-id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"delete"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														},
														{
															"key": "module_id",
															"value": "{{last-added-module-id}}"
														}
													]
												},
												"description": "`course_id` : (int) Course id \n`module_id` : (int) Module id"
											},
											"response": []
										},
										{
											"name": "Edit module",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"course_id\":{{public-course-id}},\n  \"module_id\":{{public-course-module}},\n  \"title\":\"Module UPDATED title\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{url}}/course/module/edit",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"edit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update order lessons in module",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"course_id\":{{public-course-id}},\n  \"attributes\":[\n    { \"order_id\":1},\n      { \"order_id\":3},\n    { \"order_id\":2}\n  ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{url}}/module/lessons/order/update",
													"host": [
														"{{url}}"
													],
													"path": [
														"module",
														"lessons",
														"order",
														"update"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Article",
									"item": [
										{
											"name": "Get article list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{url}}/profile/article/list",
													"host": [
														"{{url}}"
													],
													"path": [
														"profile",
														"article",
														"list"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get article",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{url}}/article/get?course_id=1&module_id=1&article_id=10",
													"host": [
														"{{url}}"
													],
													"path": [
														"article",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "article_id",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Edit article",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"course_id\":1,  \n  \"article_id\" : 1,\n  \"attributes\":{\n       \"title\":\"test update\",\n       \"article\":\"article update\",\n       \"expected_time\" : 300\n  },\n  \"attachment\":[1,2]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{url}}/article/edit",
													"host": [
														"{{url}}"
													],
													"path": [
														"article",
														"edit"
													]
												},
												"description": "`course_id`: (int) course id\n\n`article_id`: (int) article id\n\n`attributes`: (array) update attributes\n\n`attachment`:(array) File id"
											},
											"response": []
										},
										{
											"name": "Create article from list ",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"article_param\":[\n   {\n    \"course_id\":1,\n    \"module_id\":1,\n    \"article_id\":2\n   }  \n  ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{url}}/list/article/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"list",
														"article",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Invite Lector to Lesson Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "238c26ee-06cf-44aa-bcc6-08b6f8dc3220",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5e60aa4c-e4a1-435d-856c-d2850cb10606",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\"param_invite\":[\n{\n\"email\":\"PabloEscobar@tgail.com\",\n\"status\":1,\n\"course_id\":{{public-course-id}},\n\"module_id\":{{public-course-module-id}},\n\"event_id\":{{public-course-article-article-id}},\n\"type\":\"event\"\n\n}\n]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{url}}/course/invite/lecture",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"invite",
														"lecture"
													]
												}
											},
											"response": []
										},
										{
											"name": "Course Article Invite Lecture",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "User-Agent",
														"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:77.0) Gecko/20100101 Firefox/77.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Accept-Language",
														"value": "en"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6Ly9lcnVkaXRpb24uc3BhY2UvYXBpL3Byb2ZpbGUvaW5mbyIsImlhdCI6MTU4OTkxMTEzNCwiZXhwIjoxNTkyNTM5MTM0LCJuYmYiOjE1ODk5MTExMzQsImp0aSI6IjBPcmhCWnZKMzBXU0lOOHgifQ.dIBj4LWgYBPlbyZuGYUNRR9pKseuho0KTbDLOQfeZiQ"
													},
													{
														"key": "Origin",
														"value": "https://erudition.space"
													},
													{
														"key": "Connection",
														"value": "keep-alive"
													},
													{
														"key": "Referer",
														"value": "https://erudition.space/create-course/second?course_id=170"
													},
													{
														"key": "Cookie",
														"value": "__cfduid=db0abfb136f3a83b00a9b55f3d0c2eb641589384930; io=ym616axVHlsBCUvbAGX3"
													},
													{
														"key": "TE",
														"value": "Trailers"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"param_invite\":\t[\n\t\t{\n\t\t\"course_id\":{{public-course-id}},\n\t\t\"module_id\":{{public-course-module-id}},\n\t\t\"event_id\":{{public-course-article-article-id}},\n\t\t\"type\":\"article\",\n\t\t\"email\":{{$randomEmail}},\n\t\t\"first_name\":{{$randomFirstName}},\n\t\t\"last_name\":{{$randomLastName}},\n\t\t\"name\":{{$randomFullName}},\n\t\t\"description\":null\n\t\t}\n\t]\n}"
												},
												"url": {
													"raw": "{{url}}/course/invite/lecture?=",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"invite",
														"lecture"
													],
													"query": [
														{
															"key": "",
															"value": ""
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Quiz",
									"item": [
										{
											"name": "Quiz category",
											"item": [
												{
													"name": "Create category",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"category_name\":\"quiz category\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{host_api}}/quiz/category/create",
															"host": [
																"{{host_api}}"
															],
															"path": [
																"quiz",
																"category",
																"create"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Create Multi-answer type Quiz Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2c9b7764-09b7-49e5-b793-2a18fa4af22f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"difficulty\":\"beginner\",\n\t\"initialDate\":\"2018-04-27T09:17:09.667Z\",\n\t\"question\":\n\t[\n\t\t{\n\t\t\t\"open\":[],\n\t\t\t\"normal\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Number of User Stories set for current Sprint\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Number of Points for Sprint\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"User Stories planned to be implemented in certain Sprint\",\n\t\t\t\t\t\"correct\":true\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"points\":4,\n\t\t\t\t\"name\":\"What means Sprint Backlog?\",\n\t\t\t\t\"question_type\":\"normal\",\n\t\t\t\t\"answer_count\":1\n\t\t},\n\t\t{\n\t\t\t\"open\":[],\n\t\t\t\"normal\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Kanban\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"RAD\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"XP\",\n\t\t\t\t\t\"correct\":true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"points\":4,\n\t\t\t\t\"name\":\"What is more directive and strict in terms of rules Agile approach?\",\n\t\t\t\t\"question_type\":\"normal\",\n\t\t\t\t\"answer_count\":1\n\t\t},\n\t\t{\n\t\t\t\"open\":[],\n\t\t\t\"normal\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Project Coordinator\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Project Manager\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum Master\",\n\t\t\t\t\t\"correct\":true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum Owner\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum Lead\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"points\":5,\n\t\t\t\t\"name\":\"What other role exists in Scrum apart from Product Owner and the team?\",\n\t\t\t\t\"question_type\":\"normal\",\n\t\t\t\t\"answer_count\":1\n\t\t}\n\t\t],\n\t\t\"point\":8,\n\t\t\"attempts\":8,\n\t\t\"order_question\":\"random\",\n\t\t\"detailed_result\":1,\n\t\t\"q_point\":14,\n\t\t\"question_id\":[],\n\t\t\"course_id\":{{public-course-id}},\n\t\t\"module_id\":{{public-course-module}},\n\t\t\"title\":\"QA Essentials\",\n\t\t\"minutes\":\"20\",\n\t\t\"description\":\"<p><span style='background-color: rgb(255, 255, 255); font-size: 16px; color: rgb(73, 73, 73);'>As you may know, the travel site aggregates information from many different hotels. When you click search, the site then interacts with each hotel API, which delivers results for available rooms that meet your criteria. This can all happen within seconds because of an API, which acts like a messenger that runs back and forth between applications, databases, and devices.</span></p>\",\n\t\t\"time_limit\":1200,\n\t\t\"date_from\":\"2018-04-27\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{url}}/quiz/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"quiz",
														"create"
													]
												},
												"description": "Generated from a curl request: \ncurl 'https://diprella.com/api/quiz/create' -H 'cookie: __cfduid=dba75888c012ca09b5635715ee86a3b3c1513170329; io=2mj6hO0GNWodQ53nACnr' -H 'origin: https://diprella.com' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: ua' -H 'authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQsImlzcyI6Imh0dHBzOi8vZGlwcmVsbGEuY29tL2FwaS9nb29nbGUvbG9naW4iLCJpYXQiOjE1MjU3MTk3MjksImV4cCI6MTUyODM0NzcyOSwibmJmIjoxNTI1NzE5NzI5LCJqdGkiOiJXaTc0eWNkQ0dYTkNDUFZ0In0.sp4HakAF7z5wZCfHdpKn-2PITsWAxLKZR-ZyR5k9fjg' -H 'content-type: application/json' -H 'accept: application/json' -H 'referer: https://diprella.com/create-course/quiz?course_id=107&module_id=108' -H 'authority: diprella.com' -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36' --data-binary $'{\\\"initialDate\\\":\\\"2018-05-09T11:57:09.742Z\\\",\\\"question\\\":[{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"SDLC Model\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Development Methodology\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Framework\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"Approach\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"d\\\"}],\\\"points\\\":6,\\\"name\\\":\\\"What is Scrum?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":2},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"SDLQ Model\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Approach\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Methodology\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"}],\\\"points\\\":6,\\\"name\\\":\\\"What is Agile?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Scrum\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Kanban\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"RAD\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"XP\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"d\\\"}],\\\"points\\\":5,\\\"name\\\":\\\"Which is the most directive approach?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Project Manage\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Project Coordinator\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Client\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"Customer\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"d\\\"},{\\\"text\\\":\\\"Scrum Owner\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"e\\\"},{\\\"text\\\":\\\"Scrum Lead\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"f\\\"},{\\\"text\\\":\\\"Scrum Master\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"g\\\"}],\\\"points\\\":5,\\\"name\\\":\\\"Which is one more role in Scrum apart Product Owner and the actual team?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Duration of one iteration\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Number of Points to complete the Sprint\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Number of User Stories from the general project Backlog\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"}],\\\"points\\\":5,\\\"name\\\":\\\"What is Sprint Backlog?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Complete current Sprint with Fail status and plan new one\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Delete User Strories\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Move these User Stories back to project Backlog\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"Re-estimate sprint backlog based on the number of User Stories which still need to complete\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"d\\\"}],\\\"points\\\":8,\\\"name\\\":\\\"What is the best approach to use if we have User Stories in Sprint Backlog which won\\'t be implemented during current Sprint?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":2}],\\\"point\\\":8,\\\"attempts\\\":3,\\\"order_question\\\":\\\"random\\\",\\\"difficulty\\\":\\\"beginner\\\",\\\"detailed_result\\\":1,\\\"q_point\\\":35,\\\"question_id\\\":[],\\\"course_id\\\":\\\"107\\\",\\\"module_id\\\":\\\"108\\\",\\\"title\\\":\\\"Agile Principles, rules and approaches\\\",\\\"minutes\\\":\\\"15\\\",\\\"description\\\":\\\"<p>The signatories below are members of the [Project name] team. Signature indicates agreement with the test strategies specified in this document. Further, signature indicates agreement that the document is suitable for use in advancing to testing of the system. Finally, it is understood by all signing, that the document will be used as the basis for the application\\u2019s acceptance.</p>\\\",\\\"time_limit\\\":900,\\\"date_from\\\":\\\"2018-05-09\\\"}' --compressed"
											},
											"response": []
										},
										{
											"name": "Get quiz question",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/quiz/question/get?course_id=1&module_id=1&quiz_id=2",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"quiz",
														"question",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "quiz_id",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Edit quiz ",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"course_id\":1,\n  \"quiz_id\":1,\n  \"attributes\":{\n    \"difficulty\":\"advanced\",\n    \"description\":\"edit description\"\n  }\n  \n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/quiz/edit",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"quiz",
														"edit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Quiz delete ",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"quiz_id\":3\n  \n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/quiz/delete",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"quiz",
														"delete"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get quiz ",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/quiz/get?course_id=1&module_id=1&quiz_id=1",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"quiz",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "quiz_id",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create quiz from list",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"quiz_param\":[\n  {\n    \"course_id\":1,\n    \"module_id\":1,\n    \"quiz_id\":1\n  }\n  ]  \n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/list/quiz/create",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"list",
														"quiz",
														"create"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event",
									"item": [
										{
											"name": "Event create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"course_id\":1,\n  \"module_id\":1,\n  \"title\":\"webinar2\",\n  \"date_from\":\"2019-12-12\",\n  \"description\":\"test\",\n  \"duration\":3600,\n  \"timezone\":\"ua\",\n  \"start_time\":\"18:22:22\",\n  \"timezone_region\":\"Europe/Kiev\",\n  \"type\":\"webinar\",\n  \"files_id\":[\n    {\n      \"id\":1,\n      \"type\":\"public\"\n    }\n  ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/event/create",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Event image list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/event/image/list?course_id=1&module_id=1&event_id=10",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"image",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "event_id",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Event image save",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "1",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "1",
															"type": "text"
														},
														{
															"key": "event_id",
															"value": "1",
															"type": "text"
														},
														{
															"key": "file",
															"value": "",
															"type": "file"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/event/image/save",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"image",
														"save"
													]
												}
											},
											"response": []
										},
										{
											"name": "Event image delete",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/event/image/delete?course_id=1&event_id=1&module_id=1&file_id=10&perm_delete=true",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"image",
														"delete"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "event_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "file_id",
															"value": "10"
														},
														{
															"key": "perm_delete",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get files event",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/event/files/get?course_id=1&module_id=1&event_id=6",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"files",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "event_id",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Event edit",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"course_id\":1,\n  \"event_id\":3,\n  \"attributes\" : {\n    \"title\" : \"update title\",  \n    \"description\" : \"update  description\",\n    \"duration\":3600,\n    \"date_from\":\"2019-12-12\",\n      \"timezone\":\"ua\",\n    \"start_time\":\"18:22:22\",\n    \"timezone_region\":\"Europe/Kiev\",\n     \"type\":\"webinar\"\n  },\n  \"attachment\" :[\n    {\"id\":1,\"type\": \"private\"},\n    {\"id\":2,\"type\": \"public\"}\n  ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/event/edit",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"edit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get event title",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/dashboard/event/title?event_id=1",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"dashboard",
														"event",
														"title"
													],
													"query": [
														{
															"key": "event_id",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get event",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/event/get?course_id=1&module_id=1&event_id=1",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "event_id",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Save note with event",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"course_id\":3,\n  \"module_id\":4,\n  \"event_id\":1,\n  \"type\":\"webinar\",\n  \"note\":\"test note note test\"\n  \n  \n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/event/note/save",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"event",
														"note",
														"save"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Step-3",
							"item": [
								{
									"name": "Invite user to course",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/user/invite/course?course_id=1&email=userrrr3434@gmail.com&status=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"user",
												"invite",
												"course"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "email",
													"value": "userrrr3434@gmail.com"
												},
												{
													"key": "status",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Course publish ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":1,\n  \"cert\":true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{host_api}}/course/settings",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"settings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create necessary lesson",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"necessary_lessons\":[\n    {\n     \"course_id\":1,\n     \"module_id\":1,\n     \"event_id\":1,\n     \"type\":\"article\",\n     \"necessary\":false\n    }  \n  ]\n  \n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{host_api}}/lesson/necessary/create",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"lesson",
												"necessary",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get course necessary %",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/course/necessary/get?course_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"necessary",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Invite",
							"item": [
								{
									"name": "Invite user to course",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":1,\n  \"email\":\"test@mail.com\",\n  \"status\":true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{host_api}}/user/invite/course",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"user",
												"invite",
												"course"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invite lecturer to course",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"param_invite\":[\n   {\n     \"course_id\":2,\n     \"module_id\":1,\n     \"event_id\":1,\n     \"email\":\"company_member@gmail.com\",\n     \"type\":\"article\"\n   }\n    \n  ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{host_api}}/course/invite/lecture",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"invite",
												"lecture"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Comments",
							"item": [
								{
									"name": "Article",
									"item": [
										{
											"name": "Add comment ",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"course_id\":1,\n\"module_id\":1,\n\"article_id\":1,\n\"timezone\":3600,\n\"comment\":\"ola\",\n\"parent_id\":0,\n\"created_at\":\"2018-10-22 13:20:13\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/article/add/comment",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"article",
														"add",
														"comment"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get comments",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"url": {
													"raw": "{{host_api}}/article/comment/get?course_id=1&module_id=1&article_id=1",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"article",
														"comment",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														},
														{
															"key": "module_id",
															"value": "1"
														},
														{
															"key": "article_id",
															"value": "1"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Course",
									"item": [
										{
											"name": "Add comment",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"course_id\":1,\n\"timezone\":3600,\n\"comment\":\"ola\",\n\"parent_id\":0,\n\"created_at\":\"2018-10-22 13:20:13\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{host_api}}/course/add/comment",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"course",
														"add",
														"comment"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get comments",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host_api}}/course/comment/get?course_id=1",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"course",
														"comment",
														"get"
													],
													"query": [
														{
															"key": "course_id",
															"value": "1"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get course by id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host_api}}/get/course?course_id=1",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"get",
										"course"
									],
									"query": [
										{
											"key": "course_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get public lessons",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host_api}}/course/public/lessons",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"course",
										"public",
										"lessons"
									]
								}
							},
							"response": []
						},
						{
							"name": "Event completed",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"course_id\":1,\n\"module_id\":1,\n\"event_id\":1,\n\"type_lesson\":\"article\",\n\"status\":2,\n\"passing_time\":11231\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{host_api}}/event/complected",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"event",
										"complected"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "07d13f08-73b5-4bce-851a-8cda3ed74af1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c33c3d25-8dee-403a-9424-67292da22141",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Creating Courses Copy",
					"item": [
						{
							"name": "Step-1",
							"item": [
								{
									"name": "Course Image",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69e6a4e6-a4c5-4755-aadf-8132498c76d9",
												"exec": [
													"var jsonData = pm.response.json();",
													"// VARIABLES",
													"pm.environment.set(\"course-photo-cover\", jsonData.image);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e0fab2cc-187b-4398-b0aa-7a1e0ca569a4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"src": "/Users/inahirnyy/Documents/diprella/test-data/meet.jpg"
												},
												{
													"key": "thumb_image",
													"type": "file",
													"src": "/Users/inahirnyy/Documents/diprella/test-data/Depositphotos_15349573_m-2015.jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/image/upload",
											"host": [
												"{{url}}"
											],
											"path": [
												"image",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Course Video Trailer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae6b698c-982e-44db-b46e-4b938aac2e82",
												"exec": [
													"var jsonData = pm.response.json();",
													"// VARIABLES",
													"pm.environment.set(\"course-trailer\", jsonData.link_file);",
													"pm.environment.set(\"course-trailer-thumb\", jsonData.link_thumb);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a0f8daf-062d-4c83-8b04-461c11a4db87",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/Users/inahirnyy/Documents/diprella/test-data/movies/SampleVideo_1280x720_2mb.mp4"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/video/upload",
											"host": [
												"{{url}}"
											],
											"path": [
												"video",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Course",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7fc56f8-1bfa-444f-a69a-1b66978a2542",
												"exec": [
													"var jsonData = pm.response.json();",
													"//GET VARIABLES",
													"var privacies = pm.environment.get(\"privacies\");",
													"var privacy = pm.environment.get(\"privacy\");",
													"var ext_api = pm.environment.get(\"ext_api\");",
													"",
													"//DEFINE VARIABLES",
													"pm.environment.set(privacy + \"-course-id\", jsonData.id);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a511146f-4666-4059-a669-5f5c51eb542a",
												"exec": [
													"var privacies = pm.environment.get(\"privacies\");",
													"",
													"if(!privacies) { ",
													"  privacies = [\"public\", \"private\", \"protected\"];",
													"  } else if(privacies.length == 0) {",
													"     privacies = [\"public\", \"private\", \"protected\"]; ",
													"  }",
													"  ",
													"var currentPrivacy = privacies.shift();",
													"",
													"pm.environment.set(\"privacy\", currentPrivacy);",
													"pm.environment.set(\"privacies\", privacies);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Representational state transfer (REST) is a stateless software architecture",
													"type": "text"
												},
												{
													"key": "image",
													"value": "{{course-photo-cover}}",
													"type": "text"
												},
												{
													"key": "thumb_image",
													"value": "{{course-trailer}}",
													"description": "Not sure if it is a video thumb file or photo cover thumb file!!!",
													"type": "text"
												},
												{
													"key": "video_cover",
													"value": "{{course-trailer-thumb}}",
													"type": "text"
												},
												{
													"key": "industry_id",
													"value": "",
													"type": "text"
												},
												{
													"key": "description",
													"value": "Client-Server\nThe client-server constraint works on the concept that the client and the server should be separate from each other and allowed to evolve individually and independently. In other words, I should be able to make changes to my mobile application without impacting either the data structure or the database design on the server. At the same time, I should be able to modify the database or make changes to my server application without impacting the mobile client. This creates a separation of \nconcerns, letting each application grow and scale independently of the other and allowing your organization to grow quickly and efficiently.\n\nStateless\nREST APIs are stateless, meaning that calls can be made independently of one another, and each call contains all of the data necessary to complete itself successfully. A REST API should not rely on data being stored on the server or sessions to determine what to do with a call, but rather solely rely on the data that is provided in that call itself. Identifying information is not being stored on the server when making calls. Instead, each call has the necessary data in itself, such as the API key, access token, user ID, etc. This also helps increase the API’s reliability by having all of the data necessary to make the call, instead of relying on a series of calls with server state to create an object, which may result in partial fails. Instead, in order to reduce memory requirements and keep your application as scalable as possible, a RESTful API requires that any state is stored on the client—not on the server.\n\nCache\nBecause a stateless API can increase request overhead by handling large loads of incoming and outbound calls, a REST API should be designed to encourage the storage of cacheable data. This means that when data is cacheable, the response should indicate that the data can be stored up to a certain time (expires-at), or in cases where data needs to be real-time, that the response should not be cached by the client. By enabling this critical constraint, you will not only greatly reduce the number of interactions with your API, reducing internal server usage, but also provide your API users with the tools necessary to provide the fastest and most efficient apps possible. Keep in mind that caching is done on the client side. While you may be able to cache some data within your architecture to perform overall performance, the intent is to instruct the client on how it should proceed and whether or not the client can store the data temporarily.\n\nUniform Interface\nThe key to the decoupling client from server is having a uniform interface that allows independent evolution of the application without having the application’s services, models, or actions tightly coupled to the API layer itself. The uniform interface lets the client talk to the server in a single language, independent of the architectural backend of either. This interface should provide an unchanging, standardized means of communicating between the client and the server, such as using HTTP with URI resources, CRUD (Create, Read, Update, Delete), and JSON.\n\nLayered System\nAs the name implies, a layered system is a system comprised of layers, with each layer having a specific functionality and responsibility. If we think of a Model View Controller framework, each layer has its own responsibilities, with the models comprising how the data should be formed, the controller focusing on the incoming actions and the view focusing on the output. Each layer is separate but also interacts with the other. In REST API design, the same principle holds true, with different layers of the architecture working together to build a hierarchy that helps create a more scalable and modular application.\nA layered system also lets you encapsulate legacy systems and move less commonly accessed functionality to a shared intermediary while also shielding more modern and commonly used components from them. Additionally, the layered system gives you the freedom to move systems in and out of your architecture as technologies and services evolve, increasing flexibility and longevity as long as you keep the different modules as loosely coupled as possible. There are substantial security benefits of having a layered system since it allows you to stop attacks at the proxy layer, or within other layers, preventing them from getting to your actual server architecture. By utilizing a layered system with a proxy, or creating a single point of access, you are able to keep critical and more vulnerable aspects of your architecture behind a firewall, preventing direct interaction with them by the client. Keep in mind that security is not based on single “stop all” solution, but rather on having multiple layers with the understanding that certain security checks may fail or be bypassed. As such, the more security you are able to implement into your system, the more likely you are to prevent damaging Attacks.\n\nCode on Demand\nPerhaps the least known of the six constraints, and the only optional constraint, Code on Demand allows for code or applets to be transmitted via the API for use within the application. In essence, it creates a smart application that is no longer solely dependent on its own code structure. However, perhaps because it’s ahead of its time, Code on Demand has struggled for adoption as Web APIs are consumed across multiple languages and the transmission of code raises security questions and concerns. (For example, the directory would have to be writeable, and the firewall would have to let what may normally be restricted content through.)\nTogether, these constraints make up the theory of Representational State Transfer, or REST. As you look back through these you can see how each successive constraint builds on top of the previous, eventually creating a rather complex—but powerful and flexible—application program interface. But most importantly, these constraints make up a design that operates similarly to how we access pages in our browsers on the World Wide Web. It creates an API that is not dictated by its architecture, but by the representations that it returns, and an API that—while architecturally stateless—relies on the representation to dictate the application’s state.\n",
													"type": "text"
												},
												{
													"key": "categories_id",
													"value": "",
													"type": "text"
												},
												{
													"key": "level",
													"value": "beginner",
													"type": "text"
												},
												{
													"key": "lang",
													"value": "eng",
													"type": "text"
												},
												{
													"key": "privacy",
													"value": "{{privacy}}",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{url}}/course/create",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"create"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Step-2",
							"item": [
								{
									"name": "Lesson",
									"item": [
										{
											"name": "PDF Upload while Creating new Lesson",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "65ad1e8d-b398-4639-89bf-4d05c354cf12",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"//DEFINE VARIABLES",
															"pm.environment.set(\"public-article-file-id\", jsonData[0].id);",
															"pm.environment.set(\"public-article-file-name\", jsonData[0].name);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "85cd3dc8-bb65-4138-97e6-d66fef78d75a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "file",
															"type": "file",
															"src": "/Users/inahirnyy/Documents/diprella/test-data/Використання Метрик в Тестування та Кількісні Показники.pdf"
														},
														{
															"key": "type",
															"value": "private",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/files/upload",
													"host": [
														"{{url}}"
													],
													"path": [
														"files",
														"upload"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Article",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f4b12f8b-2b30-4942-90ce-62e9dd613c01",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"//DEFINE VARIABLES",
															"pm.environment.set(\"public-course-article-id\", jsonData.id);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b596f51a-812b-4583-b714-a82a189678ca",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module}}",
															"type": "text"
														},
														{
															"key": "title",
															"value": "Performance Testing Best Practices",
															"type": "text"
														},
														{
															"key": "expected_time",
															"value": "5400",
															"type": "text"
														},
														{
															"key": "order",
															"value": "1",
															"type": "text"
														},
														{
															"key": "files",
															"type": "file",
															"src": []
														},
														{
															"key": "files_id[]",
															"value": "{{public-article-file-id}}",
															"type": "text"
														},
														{
															"key": "article",
															"value": "Add more communication to your distance education\nBusiness and educational communication platform \nKnowledge is one of the paths to immortality.",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/article/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"article",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "MP4 Upload while Creating new Lesson",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9442308d-4949-44f3-830d-aaaefb4bb118",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"//DEFINE VARIABLES",
															"pm.environment.set(\"public-mp4-file-id\", jsonData[0].id);",
															"pm.environment.set(\"public-mp4-file-name\", jsonData[0].name);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f109fc1d-e37f-4f55-8df9-0bb61d39b3db",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "file",
															"type": "file",
															"src": "/Users/inahirnyy/Documents/diprella/test-data/movies/dolbycanyon.mp4"
														},
														{
															"key": "type",
															"value": "private",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/files/upload",
													"host": [
														"{{url}}"
													],
													"path": [
														"files",
														"upload"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Video Lesson",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b17a47f4-a9d9-4428-9e99-878401bdb096",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"//DEFINE VARIABLES",
															"pm.environment.set(\"public-course-video-lesson-id\", jsonData.id);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a44c5510-5737-4d80-a0f0-d5851b012b3f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module}}",
															"type": "text"
														},
														{
															"key": "title",
															"value": "Performance Testing Best Practices",
															"type": "text"
														},
														{
															"key": "expected_time",
															"value": "4500",
															"type": "text"
														},
														{
															"key": "order",
															"value": "2",
															"type": "text"
														},
														{
															"key": "files",
															"type": "file",
															"src": []
														},
														{
															"key": "files_id[]",
															"value": "{{public-mp4-file-id}}",
															"type": "text"
														},
														{
															"key": "article",
															"value": "Running Common set of test cases",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/article/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"article",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create PDF Lesson",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9d4cb6e5-1c26-4427-a3ad-e157f2a84bba",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"//DEFINE VARIABLES",
															"pm.environment.set(\"public-course-pdf-lesson-id\", jsonData.id);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "404a2792-8fcd-4d54-b3a7-b328a1e3154f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module}}",
															"type": "text"
														},
														{
															"key": "title",
															"value": "Performance Testing Best Practices",
															"type": "text"
														},
														{
															"key": "expected_time",
															"value": "45",
															"type": "text"
														},
														{
															"key": "order",
															"value": "2",
															"type": "text"
														},
														{
															"key": "files",
															"type": "file",
															"src": "/Users/inahirnyy/Documents/diprella/test-data/application-performance-testing-basics-agileload.pdf"
														},
														{
															"key": "files_id",
															"value": "{{public-article-file-id}}",
															"type": "text"
														},
														{
															"key": "article",
															"value": "What’s a version control system?\nA version control system, or VCS, tracks the history of changes as people and teams collaborate on projects together. As the project evolves, teams can run tests, fix bugs, and contribute new code with the confidence that any version can be recovered at any time. Developers can review project history to find out:\n\nWhich changes were made?\nWho made the changes?\nWhen were the changes made?\nWhy were changes needed?\nWhat’s a distributed version control system?\nGit is an example of a distributed version control system (DVCS) commonly used for open source and commercial software development. DVCSs allow full access to every file, branch, and iteration of a project, and allows every user access to a full and self-contained history of all changes. Unlike once popular centralized version control systems, DVCSs like Git don’t need a constant connection to a central repository. Developers can work anywhere and collaborate asynchronously from any time zone.\n\nWithout version control, team members are subject to redundant tasks, slower timelines, and multiple copies of a single project. To eliminate unnecessary work, Git and other VCSs give each contributor a unified and consistent view of a project, surfacing work that’s already in progress. Seeing a transparent history of changes, who made them, and how they contribute to the development of a project helps team members stay aligned while work",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/article/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"article",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Getting Course Modules list for the second time",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "21614fd9-9ed2-4516-b6d8-e5bd0331ee10",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "49b6f844-0158-4051-8ec2-b288ede2f341",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Invite Lector to Lesson",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f3cd414-01b5-4a6c-b561-6c7ce3e51320",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "e8ec56fd-f21a-4ef4-929b-5be8acefd4de",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module-id}}",
															"type": "text"
														},
														{
															"key": "event_id",
															"value": "{{public-course-article-id}}",
															"type": "text"
														},
														{
															"key": "type",
															"value": "article",
															"type": "text"
														},
														{
															"key": "email",
															"value": "invited-lector@mail.net",
															"type": "text"
														},
														{
															"key": "name",
															"value": "Invited-name",
															"type": "text"
														},
														{
															"key": "first_name",
															"value": "Steven",
															"type": "text"
														},
														{
															"key": "last_name",
															"value": "Stevenson",
															"type": "text"
														},
														{
															"key": "description",
															"value": "Dedcription, but for some reason it is required.",
															"type": "text"
														},
														{
															"key": "param_invite",
															"value": "{  \n   \"param_invite\":[  \n      {  \n         \"email\":\"lector.mail@gmail.com\",\n         \"status\":1,\n         \"course_id\":\"{{public-course-id}}\",\n         \"module_id\":{{public-course-module}},\n         \"event_id\":{{public-course-lesson-id}},\n         \"type\":\"article\"\n      }\n   ]\n}",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/course/invite/lecture",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"invite",
														"lecture"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change Lesson Privacy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8a9be16a-2a44-4822-8227-e99c65a418d0",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "bafa9b98-cab6-497c-9636-a23c4925ad7a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module}}",
															"type": "text"
														},
														{
															"key": "event_id",
															"value": "{{public-course-article-id}}",
															"type": "text"
														},
														{
															"key": "type_lesson",
															"value": "1",
															"type": "text"
														},
														{
															"key": "permission",
															"value": "revealed",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/permission/event",
													"host": [
														"{{url}}"
													],
													"path": [
														"permission",
														"event"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Lector Profile for inviting to Course Classes",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f4296dd-d0a5-4b5f-b8cf-53472e727fa0",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a186cefa-a174-4421-95fe-48d78408d4a6",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/profile/lecturer/list?course_id={{public-course-id}}&module_id={{public-course-module}}&lesson_id={{public-course-lesson-id}}&type=article",
													"host": [
														"{{url}}"
													],
													"path": [
														"profile",
														"lecturer",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module}}"
														},
														{
															"key": "lesson_id",
															"value": "{{public-course-lesson-id}}"
														},
														{
															"key": "type",
															"value": "article"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Webinar",
									"item": [
										{
											"name": "Webinar Cover",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8499b238-f6ff-4b80-91d9-7ef1e6322045",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "94df824f-e84e-4ab3-83ba-8e77af4a6025",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file",
															"src": []
														},
														{
															"key": "thumb_image",
															"type": "file",
															"src": []
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/image/upload",
													"host": [
														"{{url}}"
													],
													"path": [
														"image",
														"upload"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Webinar",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38b39f76-1c4f-49a6-975e-3be94f9b95f6",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "caa96460-517d-4a79-b129-37e93da35d4a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}",
															"type": "text"
														},
														{
															"key": "module_id",
															"value": "{{public-course-module}}",
															"type": "text"
														},
														{
															"key": "title",
															"value": "Performance Testing Best Practices",
															"type": "text"
														},
														{
															"key": "email_lecturer",
															"value": "{{lector-username}}",
															"type": "text"
														},
														{
															"key": "type_event",
															"value": "1",
															"type": "text"
														},
														{
															"key": "date_from",
															"value": "2018-03-10",
															"type": "text"
														},
														{
															"key": "start_time",
															"value": "19:55:59",
															"type": "text"
														},
														{
															"key": "duration",
															"value": "5400",
															"type": "text"
														},
														{
															"key": "timezone",
															"value": "Europe/Kiev",
															"type": "text"
														},
														{
															"key": "order",
															"value": "1",
															"type": "text"
														},
														{
															"key": "chat",
															"value": "1",
															"type": "text"
														},
														{
															"key": "max_viewers",
															"value": "{{package-webinar-users}}",
															"type": "text"
														},
														{
															"key": "files_id",
															"value": "",
															"type": "text"
														},
														{
															"key": "description",
															"value": "What’s a version control system?\nA version control system, or VCS, tracks the history of changes as people and teams collaborate on projects together. As the project evolves, teams can run tests, fix bugs, and contribute new code with the confidence that any version can be recovered at any time. Developers can review project history to find out:\n\nWhich changes were made?\nWho made the changes?\nWhen were the changes made?\nWhy were changes needed?\nWhat’s a distributed version control system?\nGit is an example of a distributed version control system (DVCS) commonly used for open source and commercial software development. DVCSs allow full access to every file, branch, and iteration of a project, and allows every user access to a full and self-contained history of all changes. Unlike once popular centralized version control systems, DVCSs like Git don’t need a constant connection to a central repository. Developers can work anywhere and collaborate asynchronously from any time zone.\n\nWithout version control, team members are subject to redundant tasks, slower timelines, and multiple copies of a single project. To eliminate unnecessary work, Git and other VCSs give each contributor a unified and consistent view of a project, surfacing work that’s already in progress. Seeing a transparent history of changes, who made them, and how they contribute to the development of a project helps team members stay aligned while work",
															"type": "text"
														},
														{
															"key": "files_pres_id",
															"value": "",
															"type": "text"
														},
														{
															"key": "image_cover",
															"value": "{{course-webinar-cover}}",
															"type": "text"
														},
														{
															"key": "timezone_region",
															"value": "Europe/Kiev",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{url}}/event/create",
													"host": [
														"{{url}}"
													],
													"path": [
														"event",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Getting Course Modules list [3]",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9bdf7f44-ace4-4998-acc0-b798b93e61ef",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d078c373-ffab-4c96-863e-5205f11807b2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"course",
														"module",
														"list"
													],
													"query": [
														{
															"key": "course_id",
															"value": "{{public-course-id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Checking Profile Package while Creating Wedinar",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d715e4bf-96a2-4c69-b37e-372cd4cea565",
														"exec": [
															"//VARIABLES",
															"pm.environment.set(\"package-webinar-users\", response.body.webinar_users);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a890ea62-01e2-4acc-a403-69b06fa8eb6f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{lector-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/profile/package",
													"host": [
														"{{url}}"
													],
													"path": [
														"profile",
														"package"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Getting Public Course Modules list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7bcb205-dc57-4d16-a8af-f98d65b2ad30",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"//DEFINE VARIABLES",
													"pm.environment.set(\"public-course-module\", jsonData.modules[0].id);",
													"pm.environment.set(\"public-course-module-order\", jsonData.modules[0].order_id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e1ecf148-e75a-47dc-b043-9f3e3607a59a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{lector-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"module",
												"list"
											],
											"query": [
												{
													"key": "course_id",
													"value": "{{public-course-id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Checking Profile Package after moving the 3rd Step",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac59dd02-265d-43db-8782-86411325070e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");",
											"});",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.value).to.eql(100);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c216ae36-6c6a-476b-935c-ea78877a93fa",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{lector-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/profile/package",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"package"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Multi-answer type Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14b2256a-67c1-468e-ab06-f0ef13c7c2eb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{lector-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"difficulty\":\"beginner\",\n\t\"initialDate\":\"2018-04-27T09:17:09.667Z\",\n\t\"question\":\n\t[\n\t\t{\n\t\t\t\"open\":[],\n\t\t\t\"normal\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Number of User Stories set for current Sprint\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Number of Points for Sprint\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"User Stories planned to be implemented in certain Sprint\",\n\t\t\t\t\t\"correct\":true\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"points\":4,\n\t\t\t\t\"name\":\"What means Sprint Backlog?\",\n\t\t\t\t\"question_type\":\"normal\",\n\t\t\t\t\"answer_count\":1\n\t\t},\n\t\t{\n\t\t\t\"open\":[],\n\t\t\t\"normal\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Kanban\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"RAD\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"XP\",\n\t\t\t\t\t\"correct\":true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"points\":4,\n\t\t\t\t\"name\":\"What is more directive and strict in terms of rules Agile approach?\",\n\t\t\t\t\"question_type\":\"normal\",\n\t\t\t\t\"answer_count\":1\n\t\t},\n\t\t{\n\t\t\t\"open\":[],\n\t\t\t\"normal\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Project Coordinator\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Project Manager\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum Master\",\n\t\t\t\t\t\"correct\":true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum Owner\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"text\":\"Scrum Lead\",\n\t\t\t\t\t\"correct\":false\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"points\":5,\n\t\t\t\t\"name\":\"What other role exists in Scrum apart from Product Owner and the team?\",\n\t\t\t\t\"question_type\":\"normal\",\n\t\t\t\t\"answer_count\":1\n\t\t}\n\t\t],\n\t\t\"point\":8,\n\t\t\"attempts\":8,\n\t\t\"order_question\":\"random\",\n\t\t\"detailed_result\":1,\n\t\t\"q_point\":14,\n\t\t\"question_id\":[],\n\t\t\"course_id\":{{public-course-id}},\n\t\t\"module_id\":{{public-course-module}},\n\t\t\"title\":\"QA Essentials\",\n\t\t\"minutes\":\"20\",\n\t\t\"description\":\"<p><span style='background-color: rgb(255, 255, 255); font-size: 16px; color: rgb(73, 73, 73);'>As you may know, the travel site aggregates information from many different hotels. When you click search, the site then interacts with each hotel API, which delivers results for available rooms that meet your criteria. This can all happen within seconds because of an API, which acts like a messenger that runs back and forth between applications, databases, and devices.</span></p>\",\n\t\t\"time_limit\":1200,\n\t\t\"date_from\":\"2018-04-27\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{url}}/quiz/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"quiz",
										"create"
									]
								},
								"description": "Generated from a curl request: \ncurl 'https://diprella.com/api/quiz/create' -H 'cookie: __cfduid=dba75888c012ca09b5635715ee86a3b3c1513170329; io=2mj6hO0GNWodQ53nACnr' -H 'origin: https://diprella.com' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: ua' -H 'authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQsImlzcyI6Imh0dHBzOi8vZGlwcmVsbGEuY29tL2FwaS9nb29nbGUvbG9naW4iLCJpYXQiOjE1MjU3MTk3MjksImV4cCI6MTUyODM0NzcyOSwibmJmIjoxNTI1NzE5NzI5LCJqdGkiOiJXaTc0eWNkQ0dYTkNDUFZ0In0.sp4HakAF7z5wZCfHdpKn-2PITsWAxLKZR-ZyR5k9fjg' -H 'content-type: application/json' -H 'accept: application/json' -H 'referer: https://diprella.com/create-course/quiz?course_id=107&module_id=108' -H 'authority: diprella.com' -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36' --data-binary $'{\\\"initialDate\\\":\\\"2018-05-09T11:57:09.742Z\\\",\\\"question\\\":[{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"SDLC Model\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Development Methodology\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Framework\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"Approach\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"d\\\"}],\\\"points\\\":6,\\\"name\\\":\\\"What is Scrum?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":2},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"SDLQ Model\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Approach\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Methodology\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"}],\\\"points\\\":6,\\\"name\\\":\\\"What is Agile?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Scrum\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Kanban\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"RAD\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"XP\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"d\\\"}],\\\"points\\\":5,\\\"name\\\":\\\"Which is the most directive approach?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Project Manage\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Project Coordinator\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Client\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"Customer\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"d\\\"},{\\\"text\\\":\\\"Scrum Owner\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"e\\\"},{\\\"text\\\":\\\"Scrum Lead\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"f\\\"},{\\\"text\\\":\\\"Scrum Master\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"g\\\"}],\\\"points\\\":5,\\\"name\\\":\\\"Which is one more role in Scrum apart Product Owner and the actual team?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Duration of one iteration\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Number of Points to complete the Sprint\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Number of User Stories from the general project Backlog\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"}],\\\"points\\\":5,\\\"name\\\":\\\"What is Sprint Backlog?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":1},{\\\"open\\\":[],\\\"normal\\\":[{\\\"text\\\":\\\"Complete current Sprint with Fail status and plan new one\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"a\\\"},{\\\"text\\\":\\\"Delete User Strories\\\",\\\"correct\\\":false,\\\"answer_letter\\\":\\\"b\\\"},{\\\"text\\\":\\\"Move these User Stories back to project Backlog\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"c\\\"},{\\\"text\\\":\\\"Re-estimate sprint backlog based on the number of User Stories which still need to complete\\\",\\\"correct\\\":true,\\\"answer_letter\\\":\\\"d\\\"}],\\\"points\\\":8,\\\"name\\\":\\\"What is the best approach to use if we have User Stories in Sprint Backlog which won\\'t be implemented during current Sprint?\\\",\\\"question_type\\\":\\\"normal\\\",\\\"answer_count\\\":2}],\\\"point\\\":8,\\\"attempts\\\":3,\\\"order_question\\\":\\\"random\\\",\\\"difficulty\\\":\\\"beginner\\\",\\\"detailed_result\\\":1,\\\"q_point\\\":35,\\\"question_id\\\":[],\\\"course_id\\\":\\\"107\\\",\\\"module_id\\\":\\\"108\\\",\\\"title\\\":\\\"Agile Principles, rules and approaches\\\",\\\"minutes\\\":\\\"15\\\",\\\"description\\\":\\\"<p>The signatories below are members of the [Project name] team. Signature indicates agreement with the test strategies specified in this document. Further, signature indicates agreement that the document is suitable for use in advancing to testing of the system. Finally, it is understood by all signing, that the document will be used as the basis for the application\\u2019s acceptance.</p>\\\",\\\"time_limit\\\":900,\\\"date_from\\\":\\\"2018-05-09\\\"}' --compressed"
							},
							"response": []
						},
						{
							"name": "Getting Course Modules list [4]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c23b14ac-af65-4834-a2c4-3c64a7fc688e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3270d1c0-a1ba-4f95-a9f7-946dc77b930b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{lector-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"course",
										"module",
										"list"
									],
									"query": [
										{
											"key": "course_id",
											"value": "{{public-course-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Course updated with 3rd Step",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01ad8f50-bcca-45b1-b329-28b97cb2d483",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6251d302-ced6-411e-9313-6d6481e14cf7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{lector-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "course_id",
											"value": "{{public-course-id}}",
											"type": "text"
										},
										{
											"key": "price",
											"value": "",
											"type": "text"
										},
										{
											"key": "upload_files",
											"type": "file",
											"src": []
										},
										{
											"key": "comments",
											"value": "",
											"type": "text"
										},
										{
											"key": "recursiveness",
											"value": "",
											"type": "text"
										},
										{
											"key": "publish",
											"value": "true",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{url}}/course/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"course",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Courses List after New Course Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5291418-ade9-48d9-9b3e-ea34ae820759",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/courses/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"courses",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Categories List after New Course Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e86c31d3-8671-46dc-a194-c9216768e722",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0a256d03-1386-4bc9-8397-93c1727c0dd3",
										"exec": [
											"postman.setGlobalVariable(\"loadHelpers\", function loadHelpers() {",
											"    let categories = {};",
											" ",
											"    categories.verifyCount = function verifyCount(expectedCount) {",
											"        var jsonData = JSON.parse(responseBody);",
											"        tests[\"Categories cloud of Tags is counted to : \" + expectedCount] ",
											"            = jsonData.length === expectedCount;",
											"    }",
											"",
											"    return categories;",
											"} + '; loadHelpers();');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/category/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"category",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Recommendations List after New Course Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c0af999-97f4-457b-b6d6-da3bd4c952f8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{lector-token}}"
									}
								],
								"url": {
									"raw": "{{url}}/recommendation/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"recommendation",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2eed53da-5551-4046-bbff-fd0ee00943c0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "984a77c3-3f89-4e9d-a6f3-d630df0685d1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
